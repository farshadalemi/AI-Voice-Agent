version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14
    container_name: mvp_postgres
    environment:
      POSTGRES_DB: voiceagent_db
      POSTGRES_USER: voiceagent
      POSTGRES_PASSWORD: voiceagent_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - mvp_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U voiceagent -d voiceagent_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: mvp_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mvp_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: mvp_backend
    environment:
      - DATABASE_URL=postgresql://voiceagent:voiceagent_password@postgres:5432/voiceagent_db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET_KEY=your-super-secret-jwt-key-change-in-production
      - JWT_ALGORITHM=HS256
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
      - OPENAI_API_KEY=sk-demo-key-for-mvp
      - TWILIO_ACCOUNT_SID=demo-account-sid
      - TWILIO_AUTH_TOKEN=demo-auth-token
      - ENVIRONMENT=development

    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - mvp_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mvp_frontend
    environment:
      - NODE_OPTIONS=--max-old-space-size=1024
      - REACT_APP_API_URL=http://localhost:8000/api/v1
      - REACT_APP_ENVIRONMENT=development
      - CHOKIDAR_USEPOLLING=true
      - CHOKIDAR_INTERVAL=1000
      - WATCHPACK_POLLING=true
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/package.json:/app/package.json
      - ./frontend/tsconfig.json:/app/tsconfig.json
    depends_on:
      - backend
    networks:
      - mvp_network
    restart: unless-stopped
    mem_limit: 2g
    mem_reservation: 1g



  # Adminer for Database Management (Development only)
  adminer:
    image: adminer
    container_name: mvp_adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    networks:
      - mvp_network
    profiles:
      - development

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  mvp_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
